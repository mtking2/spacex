---
http_interactions:
- request:
    method: get
    uri: https://api.spacexdata.com/v3/launches/upcoming
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.3
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Mon, 29 Oct 2018 22:59:11 GMT
      Content-Type:
      - application/json; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Set-Cookie:
      - __cfduid=dc63256bab7f88c06c55be07971c3b9cc1540853951; expires=Tue, 29-Oct-19
        22:59:11 GMT; path=/; domain=.spacexdata.com; HttpOnly; Secure
      Vary:
      - Accept-Encoding, Origin
      X-Dns-Prefetch-Control:
      - 'off'
      X-Frame-Options:
      - SAMEORIGIN
      Strict-Transport-Security:
      - max-age=15552000; includeSubDomains
      X-Download-Options:
      - noopen
      X-Content-Type-Options:
      - nosniff
      X-Xss-Protection:
      - 1; mode=block
      Access-Control-Allow-Origin:
      - "*"
      X-Koa-Redis-Cache:
      - 'true'
      X-Response-Time:
      - 2ms
      Expect-Ct:
      - max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"
      Server:
      - cloudflare
      Cf-Ray:
      - 4719404aacf55e58-TPA
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Mon, 29 Oct 2018 22:59:11 GMT
recorded_with: VCR 4.0.0
